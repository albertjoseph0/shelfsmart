# Secrets defined here are available for reference under registry/password, env/secret, builder/secrets,
# and accessories/*/env/secret in config/deploy.yml. All secrets should be pulled from either
# password manager, ENV, or a file. DO NOT ENTER RAW CREDENTIALS HERE! This file needs to be safe for git.

# Option 1: Read secrets from the environment
# DATABASE_URL=$DATABASE_URL
# OPENAI_API_KEY=$OPENAI_API_KEY
# NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=$NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY
# CLERK_SECRET_KEY=$CLERK_SECRET_KEY
# CLERK_WEBHOOK_SIGNING_SECRET=$CLERK_WEBHOOK_SIGNING_SECRET
# NEXT_PUBLIC_BASE_URL=$NEXT_PUBLIC_BASE_URL
# STRIPE_PUBLIC_KEY=$STRIPE_PUBLIC_KEY
# STRIPE_SECRET_KEY=$STRIPE_SECRET_KEY
# STRIPE_WEBHOOK_SECRET=$STRIPE_WEBHOOK_SECRET
# NEXT_PUBLIC_STRIPE_SAVANT_PRICE_ID=$NEXT_PUBLIC_STRIPE_SAVANT_PRICE_ID
# NEXT_PUBLIC_STRIPE_SCHOLAR_PRICE_ID=$NEXT_PUBLIC_STRIPE_SCHOLAR_PRICE_ID
# NEXT_PUBLIC_STRIPE_STARTER_PRICE_ID=$NEXT_PUBLIC_STRIPE_STARTER_PRICE_ID
# NEXT_PUBLIC_STRIPE_MANAGE_SUBSCRIPTION_URL=$NEXT_PUBLIC_STRIPE_MANAGE_SUBSCRIPTION_URL
# NEXT_PUBLIC_CLERK_SIGN_UP_FORCE_REDIRECT_URL=$NEXT_PUBLIC_CLERK_SIGN_UP_FORCE_REDIRECT_URL
# NEXT_PUBLIC_CLERK_SIGN_IN_FORCE_REDIRECT_URL=$NEXT_PUBLIC_CLERK_SIGN_IN_FORCE_REDIRECT_URL
# KAMAL_REGISTRY_PASSWORD=$KAMAL_REGISTRY_PASSWORD

# Option 2: Read secrets via a command
# RAILS_MASTER_KEY=$(cat config/master.key)

# Option 3: Read secrets via kamal secrets helpers
# These will handle logging in and fetching the secrets in as few calls as possible
# There are adapters for 1Password, LastPass + Bitwarden

# Fetch secrets from shelfsmart project
kamal secrets fetch --adapter bitwarden-sm 2e8c9b98-d8a9-4907-a153-b2cb00e6a999/all

# Extract the secret
kamal secrets extract OPENAI_API_KEY <SECRETS-FETCH-OUTPUT>
kamal secrets extract NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY <SECRETS-FETCH-OUTPUT>
kamal secrets extract CLERK_SECRET_KEY <SECRETS-FETCH-OUTPUT>
kamal secrets extract CLERK_WEBHOOK_SIGNING_SECRET <SECRETS-FETCH-OUTPUT>
kamal secrets extract NEXT_PUBLIC_BASE_URL <SECRETS-FETCH-OUTPUT>
kamal secrets extract STRIPE_PUBLIC_KEY <SECRETS-FETCH-OUTPUT>
kamal secrets extract STRIPE_SECRET_KEY <SECRETS-FETCH-OUTPUT>
kamal secrets extract STRIPE_WEBHOOK_SECRET <SECRETS-FETCH-OUTPUT>
kamal secrets extract NEXT_PUBLIC_STRIPE_SAVANT_PRICE_ID <SECRETS-FETCH-OUTPUT>
kamal secrets extract NEXT_PUBLIC_STRIPE_SCHOLAR_PRICE_ID <SECRETS-FETCH-OUTPUT>
kamal secrets extract NEXT_PUBLIC_STRIPE_STARTER_PRICE_ID <SECRETS-FETCH-OUTPUT>
kamal secrets extract NEXT_PUBLIC_STRIPE_MANAGE_SUBSCRIPTION_URL <SECRETS-FETCH-OUTPUT>
kamal secrets extract NEXT_PUBLIC_CLERK_SIGN_UP_FORCE_REDIRECT_URL <SECRETS-FETCH-OUTPUT>
kamal secrets extract NEXT_PUBLIC_CLERK_SIGN_IN_FORCE_REDIRECT_URL <SECRETS-FETCH-OUTPUT>
kamal secrets extract KAMAL_REGISTRY_PASSWORD <SECRETS-FETCH-OUTPUT>

# SECRETS=$(kamal secrets fetch --adapter 1password --account my-account --from MyVault/MyItem KAMAL_REGISTRY_PASSWORD RAILS_MASTER_KEY)
# KAMAL_REGISTRY_PASSWORD=$(kamal secrets extract KAMAL_REGISTRY_PASSWORD $SECRETS)
# RAILS_MASTER_KEY=$(kamal secrets extract RAILS_MASTER_KEY $SECRETS)
